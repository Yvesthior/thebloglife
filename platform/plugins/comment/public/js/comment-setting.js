(()=>{"use strict";function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}const n=function(){function n(e){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);var t=e.data("apis");this.$el=e,this.$buttonCheck=e.find("#check-version"),this.checkLatestApi=t.check,this.downloadApi=t.download,this.initEvents()}var t,a;return t=n,a=[{key:"initEvents",value:function(){this.$buttonCheck.on("click",this.check.bind(this))}},{key:"check",value:function(){var e=this;if(this.$buttonCheck.prop("disabled",!0).addClass("button-loading"),this.$buttonCheck.hasClass("has-new-version")){var n=this.$buttonCheck.prev(".alert");this.installUpdate(n)}else this.callApi(this.checkLatestApi).then((function(n){var t=n.data;t.has?(e.$buttonCheck.before('\n                        <div class="alert alert-warning">\n                            Comment version <strong>'.concat(t.version,"</strong> is now available. Would you like to download it now?\n                        </div>\n                    ")),e.$buttonCheck.attr("class","btn btn-primary").addClass("has-new-version").prop("disabled",!1).html('<i class="fas fa-download"></i> Install Update')):(e.$buttonCheck.before('\n                        <div class="alert alert-info">\n                            Comment Plugin is up to update.\n                        </div>\n                    '),e.$buttonCheck.removeClass("button-loading"))}))}},{key:"installUpdate",value:function(e){var n=this,t=this.$el.data("msg"),a=[];e.attr("class","alert alert-warning").text("It will just take a few minutes. Please do not refresh the screen or close the window before the update finishes"),function s(){var i=$('<p class="text-primary"><span>'.concat(t,"</span></p>"));n.$el.append(i),n.callApi(n.downloadApi,{files:a},"POST").then((function(o){var l,r;if(o.error)e.replaceWith('\n                        <div class="alert alert-danger">\n                            '.concat(null!==(l=o.message)&&void 0!==l?l:"There are somethings wrong. Please try again","\n                        </div>\n                    ")).slideDown();else if(i.attr("class","text-success").prepend('<i class="fas fa-check-circle mr-2"></i> '),null!==(r=o.data)&&void 0!==r&&r.ok)n.$buttonCheck.prop("disabled",!1).removeClass("button-loading").attr("class","btn btn-warning").html('<i class="fas fa-sync-alt"></i> Reload').off("click").on("click",(function(){return window.location.reload()})),e.replaceWith('\n                            <div class="alert alert-success">\n                                Update plugin successfully! Press <a onclick="window.location.reload()"><strong>Reload</strong></a> to finish\n                            </div>\n                        ').slideDown();else{var c,d;t=o.message,null!==(c=o.data)&&void 0!==c&&c.file&&a.push(null===(d=o.data)||void 0===d?void 0:d.file),s()}}))}()}},{key:"callApi",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";return new Promise((function(a){return $.ajax({url:e,data:n,method:t,success:function(e){a(e)},error:function(e){var n;a({error:!0,message:null==e||null===(n=e.responseJSON)||void 0===n?void 0:n.message})}})}))}}],a&&e(t.prototype,a),n}();$((function(){var e=$("#comment-enable"),t=$("#show-comments-setting"),a=$("#comment-plugin-updater");e.is(":checked")&&t.show(),e.on("change",(function(e){e.target.checked?t.show():t.hide()})),a.length&&new n(a)}))})();
